# Implement your grammar here in the `grammar` variable.
# You may define additional functions, e.g. for generators.
# You may not import any other modules written by yourself.
# That is, your entire implementation must be in `grammar.py`
# and `fuzzer.py`.

from fuzzingbook.ProbabilisticGrammarFuzzer import opts, is_valid_grammar, ProbabilisticGrammarFuzzer
from fuzzingbook.GrammarCoverageFuzzer import SimpleGrammarCoverageFuzzer


grammar = {
    "<start>": [("<create_table>", opts(prob=0.09)),
                ("<create_index>", opts(prob=0.045)),
                ("<create_unique_index>", opts(prob=0.045)),
                ("<create_trigger>", opts(prob=0.015)),
                ("<create_view>", opts(prob=0.045)),
                ("<drop_index>", opts(prob=0.035)),
                ("<drop_table>", opts(prob=0.03)),
                ("<drop_trigger>", opts(prob=0.03)),
                ("<drop_view>", opts(prob=0.03)),
                ("<insert>", opts(prob=0.1)),
                ("<update>", opts(prob=0.055)),
                ("<vacuum>", opts(prob=0.02)),
                ("<delete>", opts(prob=0.01)),
                ("<on_conflict>", opts(prob=0.015)),
                ("<pragma>", opts(prob=0.035)),
                ("<replace>", opts(prob=0.055)),
                ("<select>", opts(prob=0.12)),
                ("<select-simple>", opts(prob=0.045)),
                ("<alter>", opts(prob=0.055)),
                ("<analyze>", opts(prob=0.02)),
                ("<explain>", opts(prob=0.02)),
                ("<attach_database>", opts(prob=0.02)),
                ("<detach_database>", opts(prob=0.02)),
                ("<savepoint>", opts(prob=0.015)),
                ("<release>", opts(prob=0.015)),
                ("<rollback>", opts(prob=0.015))],
    "<create_table>": [("CREATE TABLE <table_name> (<table_columns_def>) ;", opts(prob=0.75)),
                       "CREATE TABLE <table_name> AS <select> "],
    "<create_index>": ["CREATE INDEX <index_name> ON <table_name> (<column-details>) ;",
                       "CREATE INDEX <index_name> ON <table_name> (<column-details>) ; <comments>"],
    "<create_unique_index>": ["CREATE UNIQUE INDEX <index_name> ON <table_name> (<column-details>) ;"],
    "<create_trigger>": ["CREATE TRIGGER <trigger_name> <timing> <database_event> ON <table_name> <trigger_action> ;",
                         "CREATE TRIGGER <trigger_name> INSTEAD OF <database_event> ON <table_name> <trigger_action> ;"],
    "<create_view>": ["CREATE VIEW <view_name> AS <select>"],
    "<drop_index>": ["DROP INDEX <index_name> ;"],
    "<drop_table>": ["DROP TABLE <table_name> ;"],
    "<drop_trigger>": ["DROP TRIGGER <trigger_name> ;"],
    "<drop_view>": ["DROP VIEW <view_name> ;"],
    "<insert>": ["INSERT INTO <table_name> VALUES(<values>) ;",
                 "INSERT INTO <table_name> VALUES(<values>) ; <comments>",
                 "INSERT INTO <table_name> (<table_columns_def>) VALUES(<values>) ;",
                 "INSERT INTO <table_name> <select>",
                 "INSERT INTO <table_name> DEFAULT VALUES;"],
    "<vacuum>": ["VACUUM <string> ;"],
    "<delete>": ["DELETE FROM <table_name> WHERE <expr> ;","DELETE FROM <table_name> ;",
                 "DELETE FROM <table_name> ; <comments>"],
    "<on_conflict>": ["ON CONFLICT <conflict_clause> ;"],
    "<replace>": ["REPLACE INTO <table_name> VALUES(<values>) ;",
                  "REPLACE INTO <table_name> (<table_columns_def>) VALUES(<values>) ;",
                  "REPLACE INTO <table_name> <select>"],
    "<update>": ["UPDATE <table_name> SET <assignments> ;"],
                 #"UPDATE <table_name> SET <assignments> WHERE <expr>;"],
    "<select>": ["SELECT * FROM <table_name> <clause> ;",
                 "SELECT * FROM <table_name> ; <comments>",
                 "SELECT <string> FROM <table_name> ; <comments>",
                 "SELECT <string> FROM <table_name> <clause> ;",
                 "SELECT <string>,<string> FROM <table_name> <clause> ;"],
    "<select-simple>": ["SELECT <date_time> ;",
                        "SELECT <agg-func-str> ;"],
    "<clause>": ["LIMIT <int>", ("", opts(prob=0.4)), "ORDER BY <string>", "GROUP BY <string>"],
    "<date_time>": ["date(<arg>)",
                    "time(<arg>)",
                    "datetime(<arg>)",
                    "julianday(<arg>)",
                    "unixepoch(<arg>)",
                    "strftime(\'<format_string>\',<arg>)",
                    "timediff(time(<arg>),time(<arg>))"],
    "<arg>": ["\' now \'", "\' +1 hour \'", "<timestamp>"],
    "<timestamp>": ["<int><int><int><int><int><int><int>", "<int><int><int><int><int><int><int><int><int><int>"],
    "<format_string>": ['%Y-%m-%d %H:%M:%S'],
    "<alter>": ["ALTER TABLE <table_name> RENAME TO <string> ;",
                "ALTER TABLE <table_name> RENAME <col_name> TO <string> ;",
                "ALTER TABLE <table_name> ADD COLUMN <col_name> <data_type> ;",
                "ALTER TABLE <table_name> DROP COLUMN <col_name> ;"],
    "<analyze>": ["ANALYZE <table_name> ;",
                  "ANALYZE <index_name> ;"],
    "<comments>": ["-- <string>",
                   "-- <string> <string>",
                   "/* <string> <string> */",
                   "/* <string> \n <string> */"],
    "<attach_database>": ["ATTACH DATABASE \'<string>.db\' AS \'<string>\' ;"],
    "<detach_database>": ["DETACH DATABASE \'<string>\' ;"],
    "<explain>": ["EXPLAIN <query> ", "EXPLAIN  QUERY PLAN <query> "],
    "<query>": ["<select>", "<insert>", "<replace>", "<update>", "<vacuum>", ("<delete>", opts(prob=0.05)), "<alter>"],
    "<table_columns_def>": ["<table_column_def>", "<table_columns_def>,<table_column_def>"],
    "<table_column_def>": ["<string> <data_type>", "<string>", "<string> <data_type> <constraint>", "<string> <constraint>"],
    "<column-details>": ["<string>", "<string>,<string>"],
    "<trigger_action>": ["FOR EACH ROW WHEN <expr> BEGIN <trigger-steps> END", "WHEN <expr> BEGIN <trigger-steps> END",
                         "FOR EACH ROW BEGIN <trigger-steps> END"],
    "<trigger-steps>": ["<trigger-step>", "<trigger-step>  <trigger-step>"],
    "<trigger-step>": ["<select>", "<update>", "<insert>", "<vacuum>"],
    "<values>": ["\'<string>\'", "\'<string>\',\'<string>\'"],
    "<conflict_clause>": ["ROLLBACK", "ABORT", "FAIL", "IGNORE", "REPLACE"],
    "<agg-func>": ["<agg-func-num>", "<agg-func-str>"],
    "<agg-func-num>": ["SUM(<int>)",
                   "AVG(<string>)",
                   "COUNT(<string>)",
                   "COUNT(*)",
                   "MIN(<string>)",
                   "MAX(<string>)",
                   "TOTAL(<string>)",
                   "ABS(<string>)",
                   "RANDOM()"],
    "<agg-func-str>": ["LENGTH(\'<string>\')",
                   "LTRIM(\'<string>\')",
                    "RTRIM(\'<string>\')",
                   "LOWER(\'<string>\')"
                   "UPPER(\'<string>\')",
                   "ABS(\'<string>\')",
                   "ABS(<int>)",
                   "MIN (<int>,<int>,<int>,<int>,<int>)",
                   "MAX (<int>,<int>,<int>,<int>,<int>)"],
    "<savepoint>": ["SAVEPOINT <string>;"],
    "<release>": ["RELEASE SAVEPOINT <string>; ", "RELEASE <string>; "],
    "<rollback>": ["ROLLBACK TRANSACTION TO SAVEPOINT <string>;"],
    "<pragma>": ["PRAGMA <pragma_name_none> ;",
                 "PRAGMA <pragma_name_bool> ;",
                 "PRAGMA <pragma_name_int> ;",
                 "PRAGMA <pragma_name_bool> = <boolean> ;"
                 "PRAGMA <pragma_name_int> = <number>;"
                 "PRAGMA <pragma_name_others> ;"],
    "<pragma_name_none>": ["collation_list", "compile_options", "data_version", "database_list", "freelist_count",
                           "function_list", "incremental_vacuum", "legacy_file_format", "module_list",
                           "optimize", "page_count", "pragma_list", "shrink_memory", "stats"],
    "<pragma_name_bool>": ["automatic_index", "cache_spill", "cell_size_check", "checkpoint_fullfsync",
                           "defer_foreign_keys",
                           "foreign_keys", "fullfsync", "ignore_check_constraints", "legacy_alter_table",
                           "parser_trace",
                           "query_only", "read_uncommitted", "recursive_triggers", "reverse_unordered_selects",
                           "secure_delete", "trusted_schema", "vdbe_addoptrace", "vdbe_debug", "vdbe_listing",
                           "vdbe_trace", "writable_schema"],
    "<pragma_name_int>": ["analysis_limit", "busy_timeout", "cache_size", "hard_heap_limit", "journal_size_limit",
                          "max_page_count", "page_size", "soft_heap_limit", "threads", "wal_autocheckpoint",
                          "application_id", "schema_version", "user_version"],
    "<pragma_name_others>": ["auto_vacuum = <pragma_auto_vacuum>",
                             "temp_store = <pragma_temp_store>",
                             "table_xinfo(<table_name>)", "table_info(<table_name>)", "table_list(<table_name>)",
                             "synchronous = <pragma_sync>",
                             "quick_check(<table_name>)", "quick_check(<number>)",
                             "locking_mode = <pragma_locking>", "journal_mode = <pragma_journal>",
                             "foreign_key_check(<table_name>)", "index_info(<index_name>)", "index_list(<table_name>)",
                             "index_xinfo(<index_name>)", "integrity_check(<number>)", "integrity_check(<table_name>)",
                             "encoding = <pragma_encode>"],

    "<pragma_auto_vacuum>": ["0", "NONE", "1", "FULL", "2", "INCREMENTAL"],
    "<pragma_temp_store>": ["0", "DEFAULT", "1", "FILE", "2", "MEMORY"],
    "<pragma_sync>": ["0", "OFF", "1", "NORMAL", "2", "FULL", "3", "EXTRA"],
    "<pragma_locking>": ["NORMAL", "EXCLUSIVE"],
    "<pragma_journal>": ["DELETE", "TRUNCATE", "PERSIST", "MEMORY", "WAL", "OFF"],
    "<pragma_encode>": ['UTF-8', 'UTF-16', 'UTF-16le', 'UTF-16be'],
    "<expr>": ["<expr> <binary-op> <expr>","<expr> <like-op> <expr>", "<unary-op> <expr>", "(<expr>)", "<col_name>",
               "<table_name>.<col_name>", "<literal_value>", "<agg-func>", "<expr> IS <not> NULL",
               "<expr> <not> BETWEEN <expr> AND <expr>"],
    "<literal_value>": ["<string>", "<number>", "NULL", "TRUE", "FALSE"],
    "<not>": ["", "NOT"],
    "<binary-op>": ["||", "*", "/", "%", "+", "-", "<<", ">>", "&", "|", "<", "<=", ">", ">=", "=", "==", "!=", "AND", "OR"],
    "<unary-op>": ["-", "+", "!", "~"],
    "<like-op>": ["LIKE", "NOT LIKE", "GLOB", "NOT GLOB"],
    "<constraint>": ["NOT NULL", "PRIMARY KEY", "UNIQUE"],
    "<data_type>": ["TEXT", "INT", "NUM"],
    "<timing>": ["BEFORE", "AFTER"],
    "<database_event>": ["DELETE", "INSERT", "UPDATE"],
    "<table_name>": ["<string>"],
    "<assignments>": ["<col_name> = <string>", "<col_name> = <string>, <col_name> = <string>"],
    "<col_name>": ["<string>"],
    "<index_name>": ["<string>"],
    "<trigger_name>": ["<string>"],
    "<view_name>": ["<string>"],
    "<number>": ["<int>", "<int><int>"],
    "<string>": ["<letter>", "<letter><string>"],
    "<letter>": ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t",
                 "u", "v", "w", "x", "y", "z"],
    "<int>": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
    "<boolean>": ["ON", "OFF"]
}
